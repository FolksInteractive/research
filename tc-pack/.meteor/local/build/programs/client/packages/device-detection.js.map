)]}'
{"version":3,"file":"/packages/device-detection.js","sources":["device-detection/device_detection.js","device-detection/device_helpers.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,a;AACA,2B;AACA,kB;AACA,qC;AACA,2B;;AAEA,yB;AACA,8B;AACA,kC;AACA,iC;AACA,mC;AACA,8B;AACA,K;;AAEA,oB;AACA,gB;AACA,wB;AACA,sB;AACA,0B;AACA,iB;AACA,K;;AAEA,8C;AACA,wC;AACA,8C;;AAEA,wE;AACA,I;;AAEA,I;AACA,qB;AACA,K;AACA,uD;AACA,gC;AACA,sC;AACA,G;;AAEA,qB;AACA,mD;AACA,iC;AACA,G;;AAEA,uD;AACA,qC;AACA,G;;AAEA,sD;AACA,oC;AACA,G;;AAEA,wD;AACA,sC;AACA,G;;AAEA,oD;AACA,kC;AACA,G;;AAEA,I;AACA,qB;AACA,K;AACA,+C;AACA,qC;AACA,8B;AACA,G;;AAEA,qB;AACA,0C;AACA,2B;AACA,G;;AAEA,8C;AACA,+B;AACA,G;;AAEA,6C;AACA,8B;AACA,G;;AAEA,+C;AACA,gC;AACA,G;;AAEA,2C;AACA,4B;AACA,G;;AAEA,I;AACA,wB;AACA,K;AACA,mD;AACA,sB;AACA,sD;AACA,yB;AACA,G;;AAEA,+C;AACA,4E;AACA,G;;AAEA,qB;AACA,iD;AACA,wC;AACA,wB;AACA,G;;AAEA,0C;AACA,6B;AACA,G;;AAEA,8C;AACA,iC;AACA,G;;AAEA,6C;AACA,gC;AACA,G;;AAEA,+C;AACA,kC;AACA,G;;AAEA,2C;AACA,8B;AACA,G;;AAEA,I;AACA,iB;AACA,K;AACA,sC;AACA,wB;AACA,sB;AACA,G;;AAEA,4C;AACA,gC;AACA,G;;AAEA,qB;AACA,sC;AACA,6B;AACA,I;;AAEA,0C;AACA,iC;AACA,I;;AAEA,yC;AACA,gC;AACA,I;;AAEA,2C;AACA,kC;AACA,I;;AAEA,uC;AACA,8B;AACA,I;;AAEA,I;AACA,kC;AACA,0D;AACA,6C;AACA,K;AACA,8C;AACA,2E;AACA,8C;AACA,+D;AACA,2B;AACA,a;AACA,K;;AAEA,iC;AACA,uB;;AAEA,8B;AACA,6B;AACA,wB;AACA,2D;AACA,O;;AAEA,6G;AACA,4D;AACA,oB;AACA,uD;AACA,qD;AACA,oB;AACA,gH;AACA,oC;AACA,wB;AACA,wI;AACA,6C;AACA,wB;AACA,qF;AACA,mD;AACA,wB;AACA,gS;AACA,oD;AACA,wB;AACA,6J;AACA,oD;AACA,uB;AACA,0I;AACA,yE;AACA,uB;AACA,2J;AACA,2C;AACA,yB;AACA,wE;AACA,kC;AACA,yB;AACA,qF;AACA,2C;AACA,yB;AACA,oC;AACA,yC;AACA,yB;AACA,kD;AACA,yD;AACA,yB;AACA,qiB;AACA,gD;AACA,qD;AACA,c;AACA,iD;AACA,2D;AACA,O;AACA,S;;AAEA,yB;AACA,G;;;AAGA,6B;AACA,+B;AACA,K;;;;;;;;;;;;;;;;;;;;AC3OA,gC;AACA,I;AACA,gC;AACA,K;AACA,gD;AACA,oB;AACA,6B;AACA,qF;AACA,iD;AACA,oC;AACA,c;AACA,kB;AACA,O;AACA,K;;AAEA,2C;AACA,sD;;AAEA,4C;;AAEA,gC;AACA,0C;AACA,mC;AACA,gC;AACA,2E;AACA,4B;AACA,Y;AACA,kD;AACA,kB;AACA,K;AACA,K;AACA,E;AACA,I;AACA,wB;AACA,K;AACA,wC;AACA,gC;AACA,K;AACA,4C;AACA,oC;AACA,K;AACA,2C;AACA,mC;AACA,K;AACA,6C;AACA,qC;AACA,K;AACA,yC;AACA,iC;AACA,K;;AAEA,+C;AACA,gC;AACA,K;AACA,C","sourcesContent":["(function() {\n  var Device = function() {\n    // Constructor\n    this._deps = new Deps.Dependency;\n    this._type = 'desktop';\n\n    this._suffix_deps = {\n      tv: new Deps.Dependency,\n      tablet: new Deps.Dependency,\n      phone: new Deps.Dependency,\n      desktop: new Deps.Dependency,\n      bot: new Deps.Dependency\n    }\n\n    this._suffix = {\n      tv: '_tv',\n      tablet: '_tablet',\n      phone: '_phone',\n      desktop: '_desktop',\n      bot: '_bot'\n    }\n\n    this.emptyUserAgentDeviceType = 'desktop';\n    this.botUserAgentDeviceType = 'bot';\n    this.unknownUserAgentDeviceType = 'phone';\n\n    Session.setDefault('devices_user_type_preference', 'no_preference');\n  };\n\n  /*\n   * Setting Suffixes\n   */\n  Device.prototype.setSuffix = function(type, suffix) {\n    this._suffix[type] = suffix;\n    this._suffix_deps[type].changed();\n  }\n\n  // Helper Functions\n  Device.prototype.setTVSuffix = function(suffix) {\n    this.setSuffix('tv', suffix);\n  }\n\n  Device.prototype.setTabletSuffix = function(suffix) {\n    this.setSuffix('tablet', suffix);\n  }\n\n  Device.prototype.setPhoneSuffix = function(suffix) {\n    this.setSuffix('phone', suffix);\n  }\n\n  Device.prototype.setDesktopSuffix = function(suffix) {\n    this.setSuffix('desktop', suffix);\n  }\n\n  Device.prototype.setBotSuffix = function(suffix) {\n    this.setSuffix('bot', suffix);\n  }\n\n  /*\n   * Getting Suffixes\n   */\n  Device.prototype.getSuffix = function(type) {\n    this._suffix_deps[type].depend();\n    return this._suffix[type];\n  }\n\n  // Helper Functions\n  Device.prototype.TVSuffix = function() {\n    return getSuffix('tv');\n  }\n\n  Device.prototype.TabletSuffix = function() {\n    return getSuffix('tablet');\n  }\n\n  Device.prototype.PhoneSuffix = function() {\n    return getSuffix('phone');\n  }\n\n  Device.prototype.DesktopSuffix = function() {\n    return getSuffix('desktop');\n  }\n\n  Device.prototype.BotSuffix = function() {\n    return getSuffix('bot');\n  }\n\n  /*\n   * Setting Preferences\n   */\n  Device.prototype.setPreference = function(type) {\n    this._type = type;\n    Session.set('devices_user_type_preference', type);\n    this._deps.changed();\n  }\n\n  Device.prototype.hasPreference = function() {\n    return !Session.equals('devices_user_type_preference', 'no_preference');\n  }\n\n  // Helper Functions\n  Device.prototype.clearPreference = function() {\n    this.setPreference('no_preference');\n    this.detectDevice();\n  }\n\n  Device.prototype.preferTV = function() {\n    this.setPreference('tv');\n  }\n\n  Device.prototype.preferTablet = function() {\n    this.setPreference('tablet');\n  }\n\n  Device.prototype.preferPhone = function() {\n    this.setPreference('phone');\n  }\n\n  Device.prototype.preferDesktop = function() {\n    this.setPreference('desktop');\n  }\n\n  Device.prototype.preferBot = function() {\n    this.setPreference('bot');\n  }\n\n  /*\n   * Getting Type\n   */\n  Device.prototype.type = function() {\n    this._deps.depend();\n    return this._type;\n  }\n\n  Device.prototype.isType = function(type) {\n    return type === this.type();\n  }\n\n  // Helper Functions\n  Device.prototype.isTV = function() {\n    return this.isType('tv');\n  };\n\n  Device.prototype.isTablet = function() {\n    return this.isType('tablet');\n  };\n\n  Device.prototype.isPhone = function() {\n    return this.isType('phone');\n  };\n\n  Device.prototype.isDesktop = function() {\n    return this.isType('desktop');\n  };\n\n  Device.prototype.isBot = function() {\n    return this.isType('bot');\n  };\n\n  /*\n   * Automatically detect the type\n   * Run when code first executes, can be run again later.\n   * This will not overwrite user preferences\n   */\n  Device.prototype.detectDevice = function() {\n    if (!Session.equals('devices_user_type_preference', 'no_preference')) {\n      // Don't override the user's preferences\n      this._type = Session.get('devices_user_type_preference');\n      this._deps.changed();\n      return;\n    }\n\n    var ua = navigator.userAgent;\n    var options = this;\n\n    this._type = (function() {\n      if (!ua || ua === '') {\n        // No user agent\n        return options.emptyUserAgentDeviceType||'desktop';\n      }\n\n      if (ua.match(/GoogleTV|SmartTV|Internet TV|NetCast|NETTV|AppleTV|boxee|Kylo|Roku|DLNADOC|CE\\-HTML/i)) {\n        // if user agent is a smart TV - http://goo.gl/FocDk\n        return 'tv';\n      } else if (ua.match(/Xbox|PLAYSTATION 3|Wii/i)) {\n        // if user agent is a TV Based Gaming Console\n        return 'tv';\n      } else if (ua.match(/iP(a|ro)d/i) || (ua.match(/tablet/i) && !ua.match(/RX-34/i)) || ua.match(/FOLIO/i)) {\n        // if user agent is a Tablet\n        return 'tablet';\n      } else if (ua.match(/Linux/i) && ua.match(/Android/i) && !ua.match(/Fennec|mobi|HTC Magic|HTCX06HT|Nexus One|SC-02B|fone 945/i)) {\n        // if user agent is an Android Tablet\n        return 'tablet';\n      } else if (ua.match(/Kindle/i) || (ua.match(/Mac OS/i) && ua.match(/Silk/i))) {\n        // if user agent is a Kindle or Kindle Fire\n        return 'tablet';\n      } else if (ua.match(/GT-P10|SC-01C|SHW-M180S|SGH-T849|SCH-I800|SHW-M180L|SPH-P100|SGH-I987|zt180|HTC( Flyer|_Flyer)|Sprint ATP51|ViewPad7|pandigital(sprnova|nova)|Ideos S7|Dell Streak 7|Advent Vega|A101IT|A70BHT|MID7015|Next2|nook/i) || (ua.match(/MB511/i) && ua.match(/RUTEM/i))) {\n        // if user agent is a pre Android 3.0 Tablet\n        return 'tablet';\n      } else if (ua.match(/BOLT|Fennec|Iris|Maemo|Minimo|Mobi|mowser|NetFront|Novarra|Prism|RX-34|Skyfire|Tear|XV6875|XV6975|Google Wireless Transcoder/i)) {\n        // if user agent is unique mobile User Agent\n        return 'phone';\n      } else if (ua.match(/Opera/i) && ua.match(/Windows NT 5/i) && ua.match(/HTC|Xda|Mini|Vario|SAMSUNG\\-GT\\-i8000|SAMSUNG\\-SGH\\-i9/i)) {\n        // if user agent is an odd Opera User Agent - http://goo.gl/nK90K\n        return 'phone';\n      } else if ((ua.match(/Windows (NT|XP|ME|9)/) && !ua.match(/Phone/i)) && !ua.match(/Bot|Spider|ia_archiver|NewsGator/i) || ua.match(/Win( ?9|NT)/i)) {\n        // if user agent is Windows Desktop\n        return 'desktop';\n      } else if (ua.match(/Macintosh|PowerPC/i) && !ua.match(/Silk/i)) {\n        // if agent is Mac Desktop\n        return 'desktop';\n      } else if (ua.match(/Linux/i) && ua.match(/X11/i) && !ua.match(/Charlotte/i)) {\n        // if user agent is a Linux Desktop\n        return 'desktop';\n      } else if (ua.match(/CrOS/)) {\n        // if user agent is a Chrome Book\n        return 'desktop';\n      } else if (ua.match(/Solaris|SunOS|BSD/i)) {\n        // if user agent is a Solaris, SunOS, BSD Desktop\n        return 'desktop';\n      } else if (ua.match(/curl|Bot|B-O-T|Crawler|Spider|Spyder|Yahoo|ia_archiver|Covario-IDS|findlinks|DataparkSearch|larbin|Mediapartners-Google|NG-Search|Snappy|Teoma|Jeeves|Charlotte|NewsGator|TinEye|Cerberian|SearchSight|Zao|Scrubby|Qseero|PycURL|Pompos|oegp|SBIder|yoogliFetchAgent|yacy|webcollage|VYU2|voyager|updated|truwoGPS|StackRambler|Sqworm|silk|semanticdiscovery|ScoutJet|Nymesis|NetResearchServer|MVAClient|mogimogi|Mnogosearch|Arachmo|Accoona|holmes|htdig|ichiro|webis|LinkWalker|lwp-trivial/i) && !ua.match(/mobile|Playstation/i)) {\n        // if user agent is a BOT/Crawler/Spider\n        return options.botUserAgentDeviceType||'bot';\n      } else {\n        // Otherwise assume it is a mobile Device\n        return options.unknownUserAgentDeviceType||'phone';\n      }\n    })();\n\n    this._deps.changed();\n  }\n\n\n  Meteor.Device = new Device;\n  Meteor.Device.detectDevice();\n})();\n\n","if (typeof UI !== 'undefined') {\n  /*\n   * Template Rendering Shortcut\n   */\n  UI.registerHelper('deviceRender', function() {\n    var name = this;\n    if (! _.isString(name)) {\n      // If meteor-router is installed, no passed name will load Meteor.Router.page()\n      if (typeof Meteor.Router !== 'undefined') {\n        name = Meteor.Router.page();\n      } else {\n        name = '';\n      }\n    }\n\n    var device_type = Meteor.Device.type();\n    var suffix = Meteor.Device.getSuffix(device_type);\n\n    var device_name = name + (suffix || '');\n\n    if (Template[device_name]) {\n      // Try to load the suffixed template\n      return Template[device_name];\n    } else if (Template[name]) {\n      // Fallback to unsuffixed template if suffixed template doesn't exist\n      return Template[name];\n    } else {\n      // Blaze gets grumpy if you return undefined\n      return null;\n    }\n  });\n  \n  /*\n   * Device Type Helpers\n   */\n  UI.registerHelper('isTV', function() {\n    return Meteor.Device.isTV();\n  });\n  UI.registerHelper('isTablet', function() {\n    return Meteor.Device.isTablet();\n  });\n  UI.registerHelper('isPhone', function() {\n    return Meteor.Device.isPhone();\n  });\n  UI.registerHelper('isDesktop', function() {\n    return Meteor.Device.isDesktop();\n  });\n  UI.registerHelper('isBot', function() {\n    return Meteor.Device.isBot();\n  });\n\n  UI.registerHelper('device_type', function() {\n    return Meteor.Device.type();\n  });\n}\n\n"]}